---
export interface Props {
  args: string;
}

const { args } = Astro.props;
---

<button
  class="flex cursor-pointer flex-row items-center gap-4 rounded-lg border px-2 py-2 text-sm md:px-3 md:py-3 md:text-md lg:px-5 lg:py-4 transition-colors duration-300 hover:bg-code-light-grey dark:hover:bg-code-grey border-code-silver dark:border-code-grey"
  title="Copy the command to get started"
  id="command"
>
  <code class="dark:text-code-light-blue text-code-blue" id="command-text">{args}</code>
  <svg
    id="copy-icon"
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke-width="1"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="dark:stroke-code-white stroke-code-grey"
    ><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path
      d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
  </svg>
  <svg
    id="check-icon"
    class="hidden"
    xmlns="http://www.w3.org/2000/svg"
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    stroke="#32CD32"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    ><polyline points="20 6 9 17 4 12"></polyline>
  </svg>
</button>

<script is:inline>
  const command = document.querySelector("#command");
  const commandText = document.querySelector("#command-text");
  const copyIcon = document.querySelector("#copy-icon");
  const checkIcon = document.querySelector("#check-icon");
  let cooldown = false;
  function toggleIcons() {
    copyIcon.classList.toggle("hidden");
    checkIcon.classList.toggle("hidden");
  }
  command.addEventListener("click", () => {
    if (cooldown === false) {
      cooldown = true;
      navigator.clipboard.writeText(commandText.innerText);
      toggleIcons();
      setTimeout(() => {
        toggleIcons();
        cooldown = false;
      }, 2000);
    }
  });
</script>
