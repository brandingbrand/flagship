---
import semver from "semver";
import semverRegex from "semver-regex";

export interface Props {
  files: Record<string, string>[];
}

const { files } = Astro.props;

files.sort((file1, file2) => {
  const v1 =
    semverRegex().exec(file1.url.split("/").reverse()[0])?.[0] ||
    file1.url.split("/").reverse()[0];
  const v2 =
    semverRegex().exec(file2.url.split("/").reverse()[0])?.[0] ||
    file2.url.split("/").reverse()[0];

  return semver.compare(v1, v2);
});

const url = files[files.length - 1]?.url;
---

<div class="bg-black"></div>

<script is:inline define:vars={{ url, files }}>
  const versions = files
    .filter((it) => it.url.match(/(v[\d]+?.[\d]+?.[\d]+?$)/))
    .map((it) => it.url.split("/").reverse()[0]);

  location.replace(url + `?versions=${JSON.stringify(versions)}`);
</script>
