default_platform :ios

lane :increment_build do
  begin
    version = appcenter_fetch_version_number(
        owner_name: "<%= codePluginFastlane.plugin.ios.appCenter.organization %>",
        app_name: "<%= codePluginFastlane.plugin.ios.appCenter.appName %>",
        version: "<%= ios.versioning.version %>"
    )
    if version["build_number"]
      build_number = increment_build_number(
        build_number: version["build_number"].to_i + 1
      )
      puts "Fastlane: updated build number to #{build_number}"
    end
  rescue
    puts "Fastlane: did not find any applicable versions for appcenter_fetch_version_number"
  end
end

# make a provisioned build and upload to appcenter
lane :appcenter do
  increment_build
  gym(
    scheme: "<%= codePluginFastlane.plugin.ios.buildScheme %>",
    clean: true,
    export_method: "<%= ios.signing.exportMethod %>",
    export_team_id: "<%= ios.signing.exportTeamId %>"
  )

  appcenter_upload(
    owner_name: "<%= codePluginFastlane.plugin.ios.appCenter.organization %>",
    app_name: "<%= codePluginFastlane.plugin.ios.appCenter.appName %>",
    destination_type: "<%= codePluginFastlane.plugin.ios.appCenter.destinationType %>",
    destinations: "<%= codePluginFastlane.plugin.ios.appCenter.destinations %>"
  )
end

# make an unprovisioned build
lane :build do
  xcodebuild(
    scheme: "<%= codePluginFastlane.plugin.ios.buildScheme %>",
    xcargs: "CODE_SIGN_IDENTITY='' CODE_SIGNING_REQUIRED='NO' CODE_SIGN_ENTITLEMENTS='' CODE_SIGNING_ALLOWED='NO'"
  )
end
